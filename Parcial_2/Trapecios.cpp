#include <iostream>
#include <iomanip>
#include <cmath>
#include <functional> // Para std::function

using namespace std;

// Funci√≥n gen√©rica para representar la integral dada
double f(double x) {
    return 8 + 5 * cos(x); // Ejemplo: esta funci√≥n es modificable
}

// M√©todo de los trapecios gen√©rico
double metodoTrapecios(double a, double b, int n, function<double(double)> func) {
    if (n <= 0 || a == b) {
        cerr << "Error: El n√∫mero de intervalos debe ser mayor que 0 y los l√≠mites de integraci√≥n deben ser distintos." << endl;
        return 0.0;
    }

    double h = (b - a) / n;
    double sum = 0.0;

    // Imprimir valor de h
    cout << "Valor de h = " << h << endl << endl;

    // Imprimir la tabla
    cout << left << setw(10) << "i" << setw(15) << "Xi" << setw(15) << "f(Xi)" << endl;
    cout << "-----------------------------------" << endl;
    
    for (int i = 0; i <= n; i++) {
        double xi = a + i * h;
        double fxi = func(xi);
        
        cout << left << setw(10) << i << setw(15) << fixed << setprecision(5) << xi << setw(15) << fixed << setprecision(5) << fxi << endl;

        if (i == 0 || i == n) {
            sum += fxi;
        } else {
            sum += 2 * fxi;
        }
    }
    
    double resultado = (h / 2) * sum;

    // Mostrar el c√°lculo de I_T de forma clara
    cout << "\nCalculo de It:" << endl;
    cout << "It = [(b - a) / (2 * n)] * [f(x0) + 2 * sum(f(xi)) + f(xn)]" << endl;
    cout << "It = [(" << b << " - " << a << ") / (2 * " << n << ")] * [" << func(a) << " + 2 * " 
         << (sum / 2 - func(a) - func(b)) << " + " << func(b) << "]" << endl;
    cout << "It = " << resultado << endl;

    return resultado;
}

int main() {
    double a = 0;
    double b = M_PI; // L√≠mite superior pi
    int n = 10;

    // Calcular la integral usando el m√©todo de los trapecios
    metodoTrapecios(a, b, n, f);

    return 0;
}
/*
t√©cnica de integraci√≥n num√©rica que se utiliza para aproximar el valor de una integral definida. 
Se basa en aproximar la curva de la funci√≥n mediante segmentos lineales, formando una serie de trapecios bajo la curva.

Funcionamiento del M√©todo de Trapecios:
El m√©todo de trapecios divide el intervalo de integraci√≥n [a,b] en varios subintervalos. 
Luego, cada par de puntos consecutivos se conecta mediante una l√≠nea recta, formando un trapecio. 
El √°rea de cada trapecio se calcula y luego se suman todas esas √°reas para obtener una aproximaci√≥n de la integral.

F√≥rmula:
La f√≥rmula del m√©todo de trapecios para aproximar una integral ‚à´ùëèùëé ùëì(ùë•)ùëëùë• es:
It = [(b - a) / (2 * n)] * [f(x0) + 2 * sum(f(xi)) + f(xn)]

Donde:
h = (b‚àía) / n es el ancho de cada subintervalo.
f(x0) y f(xn) son los valores de la funci√≥n en los extremos del intervalo.
La suma 2 ‚àë ùëì(ùë•ùëñ) incluye los valores de la funci√≥n en todos los puntos interiores, multiplicados por 2, 
ya que estos puntos aparecen en dos trapecios.

Dividir el intervalo [a,b] en n subintervalos de igual tama√±o, donde n puede ser par o impar.
Calcular los valores de la funci√≥n f(x) en los extremos y en los puntos intermedios del intervalo.
Aplicar la f√≥rmula del m√©todo de trapecios, que suma los valores de la funci√≥n en los puntos inicial y final, y el doble de los valores en los puntos intermedios.
Multiplicar por h/2 para obtener la aproximaci√≥n de la integral.
*/